<!DOCTYPE html>
<html>

<head>
    <title>Real Time Products</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>
    <h1>Administrador de productos:</h1>
    <a href="/profile">Mi perfil</a>
    &nbsp;
    <a href="/api/sessions/logout">Cerrar sesión</a>
    <br>
    <h2>Listado de productos:</h2>

    <!-- Lista de productos existentes -->
    <ul id="product-list">
        {{#each products}}
        <li>
            <h2>{{title}}</h2>
            <p>{{description}}</p>
            <p>Código: {{code}}</p>
            <p>Precio: {{price}}</p>
            <p>Stock: {{stock}}</p>
        </li>
        {{/each}}
    </ul>

    <h2>Create New Product:</h2>
    <form id="createProductForm">
        <!-- Formulario para crear nuevos productos -->
        <label for="title">Title:</label>
        <input type="text" id="title" name="title" required>
        <br>
        <label for="description">Description:</label>
        <input type="text" id="description" name="description" required>
        <br>
        <label for="code">Code:</label>
        <input type="text" id="code" name="code" required>
        <br>
        <label for="price">Price:</label>
        <input type="number" id="price" name="price" step="0.01" required>
        <br>
        <label for="stock">Stock:</label>
        <input type="number" id="stock" name="stock" required>
        <br>
        <label for="category">Category:</label>
        <input type="text" id="category" name="category">
        <br>
        <button type="submit">Create Product</button>
    </form>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        // Función para mostrar la lista de productos en el cliente
        const showProducts = (products) => {
            const productList = document.getElementById('product-list');
            productList.innerHTML = ''; // Limpiar la lista antes de mostrar los productos

            products.forEach((product) => {
                const productItem = document.createElement('li');
                productItem.innerHTML = `
                <h2>${product.title}</h2>
                <p>${product.description}</p>
                <p>Código: ${product.code}</p>
                <p>Precio: ${product.price}</p>
                <p>Stock: ${product.stock}</p>
            `;
                productList.appendChild(productItem);
            });
        };

        // Escuchar el evento de actualización de productos desde el servidor
        socket.on('productsUpdate', (products) => {
            // Actualizar la lista de productos en el cliente
            showProducts(products);
        });

        // Manejar el envío del formulario para crear un nuevo producto
        const createProductForm = document.getElementById('createProductForm');
        createProductForm.addEventListener('submit', (event) => {
            event.preventDefault();
            const formData = new FormData(createProductForm);
            const newProductData = {};
            formData.forEach((value, key) => {
                newProductData[key] = value;
            });

            fetch('/api/products', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(newProductData)
            })
                .then(response => response.json())
                .then(data => {
                    createProductForm.reset();
                })
                .catch(error => console.error('Error creating product:', error));
        });
    </script>
</body>

</html>