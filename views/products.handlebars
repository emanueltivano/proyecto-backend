<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inicio</title>
</head>

<body>
    <h1>¡Bienvenido, {{user.first_name}}!</h1>
    <a href="/profile">Mi perfil</a>
    &nbsp;
    <a href="/cart/{{user.cart}}">Ir al carrito</a>
    &nbsp;
    <a href="/chat">Ir al chat</a>
    &nbsp;
    <a href="/api/sessions/logout">Cerrar sesión</a>
    <br>
    <h2>Listado de productos:</h2>

    <ul>
        {{#each products}}
        <li id="{{_id}}">
            <h3>{{title}}</h3>
            <p>Descripción: {{description}}</p>
            <p>Precio: ${{price}}</p>
            <p>Categoria: {{category}}</p>
            <p class="stock">Stock: {{stock}}</p>
            <button onclick="addToCart('{{_id}}')">Agregar al carrito</button>
        </li>
        <br>
        {{/each}}
    </ul>

    <div>
        {{#if prevLink}}
        <a href="{{prevLink}}">Página anterior</a>
        {{/if}}

        {{#if nextLink}}
        <a href="{{nextLink}}">Página siguiente</a>
        {{/if}}
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io(); // Conéctate al servidor de Socket.io

        async function addToCart(pid) {
            let cid = `{{user.cart}}`;
            try {
                const response = await fetch(`/api/carts/${cid}/products/${pid}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    // Enviar un evento de Socket.io para notificar la adición de un producto al carrito
                    socket.emit('productAdded', { productId: pid });
                } else {
                    console.error('Error al agregar el producto al carrito');
                }
            } catch (error) {
                console.error('Error de red:', error);
            }
        }

        socket.on('updateStock', (data) => {
            const productId = data.productId;
            const newStockValue = data.newStockValue;
            // Encuentra el elemento de la lista de productos con el ID correspondiente
            const productElement = document.getElementById(productId);
            if (productElement) {
                // Actualiza el contenido del elemento del producto con el nuevo valor del stock
                productElement.querySelector('.stock').textContent = `Stock: ${newStockValue}`;
            }
        });

    </script>
</body>

</html>